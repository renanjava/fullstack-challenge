version: "3.9"
services:
  postgres:
    image: postgres:17.4
    restart: always
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nest-backend
    ports:
      - 3000:3000
    env_file:
      - ./backend/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-frontend
    ports:
      - 8080:80
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge
